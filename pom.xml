<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.heinersyndikat.tools</groupId>
	<artifactId>credit-manager</artifactId>
	<version>0.1-SNAPSHOT</version>
	<name>Credit Manager</name>
	<packaging>jar</packaging>
	<url>https://github.com/teezett/credit-manager</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.mainClass>de.heinersyndikat.tools.creditmanager.CreditManager</project.mainClass>
		<application.version>${project.version}</application.version>
		<application.name>${project.name}</application.name>
		<application.url>${project.url}</application.url>
		<application.vendorName>Heinersyndikat e.V.</application.vendorName>
		<application.vendorURL>http://www.heinersyndikat.de</application.vendorURL>
		<project.vendor>de.heinersyndikat.credit-manager</project.vendor>
		<asciidoctor.maven.plugin.version>1.5.2.1</asciidoctor.maven.plugin.version>
		<asciidoctorj.version>1.5.3.2</asciidoctorj.version>
		<asciidoctorj.diagram.version>1.3.1</asciidoctorj.diagram.version>
		<jruby.version>1.7.21</jruby.version><!-- downgrade of JRuby see: https://github.com/asciidoctor/asciidoctorj/issues/409 -->
	</properties>
		
	<dependencies>
		<!-- logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.6</version>
		</dependency>
		<!-- command line options parser -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.3.1</version>
		</dependency>
		<!-- encryption -->
		<!--		<dependency>
			<groupId>org.jasypt</groupId>
			<artifactId>jasypt</artifactId>
			<version>1.9.2</version>
		</dependency>-->
		<!-- WebDAV -->
		<!-- iCal support -->
		<dependency>
			<groupId>org.mnode.ical4j</groupId>
			<artifactId>ical4j</artifactId>
			<version>2.0-beta1</version>
		</dependency>
		<!-- E-Mail -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<!-- StringUtils -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.icegreen</groupId>
			<artifactId>greenmail</artifactId>
			<version>1.5.0</version>
			<scope>test</scope>
		</dependency>
	 <dependency>
	  <groupId>com.googlecode.junit-toolbox</groupId>
	  <artifactId>junit-toolbox</artifactId>
	  <version>1.5</version>
	  <scope>test</scope>
	 </dependency>
<!--	 <dependency>
	  <groupId>org.hamcrest</groupId>
	  <artifactId>hamcrest-all</artifactId>
	  <version>1.3</version>
	  <scope>test</scope>
	 </dependency>-->
	</dependencies>

	<reporting>
		<plugins>
			<!-- Javadoc -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<configuration>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	
	<build>
		
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
				
		<plugins>
			<!-- Generate properties file from pom.xml properties -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>write-project-properties</goal>
						</goals>
						<configuration>
							<outputFile>${project.build.outputDirectory}/app.properties</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- jgitflow plugin to create releases -->
			<plugin>
				<groupId>external.atlassian.jgitflow</groupId>
				<artifactId>jgitflow-maven-plugin</artifactId>
				<version>1.0-m5.1</version>
				<configuration>
					<noHotfixBuild>true</noHotfixBuild>
					<useReleaseProfile>false</useReleaseProfile>
					<!--<skipTestProject>true</skipTestProject>-->
					<noDeploy>true</noDeploy>
				</configuration>
			</plugin>
			<!-- mvn exec -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<!-- call program by 'mvn exec:java -Dexec.args="-h"' for example -->
				<configuration>
					<mainClass>${project.mainClass}</mainClass>
					<arguments>
					</arguments>
				</configuration>
			</plugin>	
			<!-- Run all implemented tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
<!--				<configuration>
					<threadCount>2</threadCount>
					<parallel>both</parallel>
					<runOrder>balanced</runOrder>
					<argLine>-Dfile.encoding=UTF-8</argLine>
					<includes>
						<include>**/ImplementedTestSuite.java</include>
					</includes>
				</configuration>-->
			</plugin>
		</plugins>
			
	</build>
	
	<profiles>
		<!-- release profile (default) -->
		<!--		<profile>
			<id>release</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<release>true</release>
			</properties>
			<build>
				<defaultGoal>install</defaultGoal>
			</build>
		</profile>-->
		<!-- build profile (default) -->
		<profile>
			<id>build</id>
			<activation>
				<property>
					<name>release</name>
				</property>
			</activation>
			<build>
				<defaultGoal>install</defaultGoal>
			</build>
		</profile>
		<!-- documentation profile -->
		<profile>
			<id>doc</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>release</name>
				</property>
			</activation>
			<build>
				<defaultGoal>generate-resources</defaultGoal>
				<plugins>
					<!-- asciidoc documentation -->
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor.maven.plugin.version}</version>
						<dependencies>
							<!-- Comment this section to use the default jruby artifact provided by the plugin -->
							<dependency>
								<groupId>org.jruby</groupId>
								<artifactId>jruby-complete</artifactId>
								<version>${jruby.version}</version>
							</dependency>
							<!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj</artifactId>
								<version>${asciidoctorj.version}</version>
							</dependency>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-diagram</artifactId>
								<version>${asciidoctorj.diagram.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<sourceDirectory>src/docs/asciidoc</sourceDirectory>
							<moduleExcludes>
								<asciidoc>**/includes/*.adoc</asciidoc>
							</moduleExcludes>
							<requires>
								<require>asciidoctor-diagram</require>
							</requires>
							<attributes>
								<!-- Example below shows how to specify in this pom instead of System's PATH, the location of dot command of Graphviz, required by PlantUML libraries -->
								<!-- Windows:
										<graphvizdot>C:\Program Files (x86)\Graphviz2.38\bin\dot.exe</graphvizdot>
								-->
								<!-- *nix :
										<graphvizdot>/usr/local/bin/dot</graphvizdot>
								-->
							</attributes>
						</configuration>
						<executions>
							<execution>
								<id>generate-html-doc</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html5</backend>
									<attributes>
										<imagesdir>./images</imagesdir>
										<toc>left</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- assembly profile -->
		<profile>
			<id>assembly</id>
			<activation>
				<property>
					<name>release</name>
				</property>
			</activation>
			<build>
				<defaultGoal>package</defaultGoal>
				<plugins>
					<!-- Javadoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.10.3</version>
						<executions>
							<execution>
								<id>resource-bundles</id>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!--					<doclet>gr.spinellis.umlgraph.doclet.UmlGraphDoc</doclet>
							<docletArtifact>
								<groupId>gr.spinellis</groupId>
								<artifactId>UmlGraph</artifactId>
								<version>4.6</version>
							</docletArtifact>-->
							<outputDirectory>${project.build.directory}/javadoc</outputDirectory>
							<reportOutputDirectory>${project.reporting.outputDirectory}/javadoc</reportOutputDirectory>
							<additionalparam>-Xdoclint:none</additionalparam>
							<detectOfflineLinks>false</detectOfflineLinks>
						</configuration>
					</plugin>
					<!-- Assembly plugin to create standalone java application -->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.5.5</version>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${basedir}/src/main/resources</directory>
									<outputDirectory />
								</fileSet>
							</fileSets>
							<descriptors>
								<descriptor>src/main/resources/standalone_assembly.xml</descriptor>
							</descriptors>
							<!-- @see http://loop81.blogspot.de/2012/03/javafx-2-get-started-with-maven-eclipse.html -->
							<archive>
								<manifest>
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								</manifest>
								<manifestEntries>
									<JavaFX-Version>8.0</JavaFX-Version>
									<Main-Class>${project.mainClass}</Main-Class>
								</manifestEntries>
							</archive>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
</project>
